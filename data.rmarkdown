# Data

## Description

1. The dataset, `countypres_2000-2020.csv`, provides county-level presidential election returns from 2000 to 2020. It is sourced from official state election data records and hosted on the [Harvard Dataverse](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/VOQCHQ). The dataset was last updated on June 8, 2021.

2. The dataset, `Education.csv`, provides information on county-level educational attainment data from 1970 to 2022. It is sourced from the USDA Economic Research Service's County-Level Data Sets, available [USDA](https://www.ers.usda.gov/data-products/county-level-data-sets/county-level-data-sets-download-data/). The dataset was last updated on June 20, 2024.

3. The dataset, `Unemployment.csv`, provides county-level unemployment rates from 2000 to 2022. It is sourced from the USDA Economic Research Service's County-Level Data Sets, available [USDA ](https://www.ers.usda.gov/data-products/county-level-data-sets/county-level-data-sets-download-data/). The dataset was last updated on June 20, 2024.

4. The datasets: `est04ALL.csv`, `est08ALL.csv`, `est12ALL.csv`, `est16ALL.csv`, `est20ALL.csv`, provide annual Small Area Income and Poverty Estimates (SAIPE) for counties in the United States. These datasets are sourced from the U.S. Census Bureau's SAIPE program and are available [SAIPE](https://www.census.gov/programs-surveys/saipe/data/datasets.html). The datasets were last updated on October 8, 2021


### Data Overview

1. The dataset, `countypres_2000-2020.csv`, contains the following variables:
- **`year`**: election year
- **`state`**: state name
- **`state_po`**: U.S. postal code state abbreviation
- **`county_name`**: county name
- **`county_fips`**: county FIPS code
- **`office`**: President
- **`candidate`**: name of the candidate
- **`party`**: party of the candidate; takes form of DEMOCRAT, REPUBLICAN, GREEN, LIBERTARIAN, or OTHER
- **`candidatevotes`**: votes received by this candidate for this particular party
- **`totalvotes`**: total number of votes cast in this county-year
- **`mode`**: mode of ballots cast; default is TOTAL, with different modes specified for 2020
- **`version`**: date when dataset was finalized

2. The dataset, `Education.csv`, contains the following variables:
- **`FIPS Code`**: FIPS code
- **`State`**: state abbreviation
- **`Area name`**: name of state or county
- **`Attribute`**: educational metric
- **`Value `**: The corresponding value for the educational metric, typically as a percentage or count

3. The dataset, `Unemployment.csv`, contains the following variables:
- **`FIPS_Code`**: FIPS code
- **`State`**: state abbreviation
- **`Area_Name`**: name of state or county
- **`Attribute`**: unemployment-related metric
- **`Value `**: The corresponding value for the unemployment metric, typically as a percentage or count

4. The datasets, `estxxALL.csv`, contain the following variables:
- **`State FIPS`**: state FIPS code
- **`County FIPS`**: county FIPS code
- **`Postal`**: U.S. postal code state abbreviation
- **`Name`**: name of the county
- **`Poverty Estimate All Ages`**: estimated number of people of all ages living in poverty
- **`Poverty Percent All Ages`**: estimated percentage of people of all ages living in poverty
- **`Poverty Estimate Under Age 18`**: estimated number of children under 18 living in poverty
- **`Poverty Percent Under Age 18`**: estimated percentage of children under 18 living in poverty
- **`Poverty Estimate Ages 5-17`**: estimated number of children aged 5-17 living in poverty
- **`Poverty Percent Ages 5-17`**: estimated percentage of children aged 5-17 living in poverty
- **`Median Household Income`**: estimated median household income for the county
- **`Poverty Estimate Ages 0-4`**: estimated number of children aged 0-4 living in poverty
- **`Poverty Percent Ages 0-4`**: estimated percentage of children aged 0-4 living in poverty
- **`90% CI Lower Bound`**: lower bound of the 90% confidence interval for poverty estimates
- **`90% CI Upper Bound`**: upper bound of the 90% confidence interval for poverty estimates


### Issues or Problems

1. `countypres_2000-2020.csv`: County results in Alaska for 2004 are based on official Alaska data, but it is clear the district returns significantly overstate the number of votes cast. In Alaska, the county_fips field stores a combination of state FIPS code and district.

2. `Education.csv`: Some attribute labels are ambiguous and may require clarification or mapping to standardized educational metrics.

3. `Unemployment.csv`: Inconsistencies in the naming of attributes could pose challenges in aligning the data with other sources.

4. `estxxALL.csv`: Attribute labels may vary slightly across years, requiring careful alignment when merging multiple years.


### Data Import Plan

1. These data will be imported into R using `readr::read_csv()` for efficient loading and analysis.

2. FIPS codes may be used to merge datasets.


## Missing value analysis

1. The dataset `countypres_2000-2020.csv`



```{r}
data_1 <- read.csv("countypres_2000-2020.csv")
# missing_summary <- colSums(is.na(data_1))
# print(missing_summary)

library(ggplot2)
suppressWarnings(library(naniar))

gg_miss_var(data_1) +
  labs(
    title = "Missing Values by Variable",
    subtitle = "Visualizing missing data in each column"
  )

gg_miss_case(data_1) +
  labs(
    title = "Missing Data Patterns Across Rows",
    subtitle = "Number of missing values per row"
  )
```




> The dataset was inspected for missing values using gg_miss_var and gg_miss_case visualizations. It was identified that the county_fips column had 52 missing values, while all other variables were complete.

> Rows with missing county_fips values were extracted and examined. It was observed that these rows corresponded to non-county entities, such as STATEWIDE WRITEIN: Aggregate votes for write-in candidates across a state. MAINE UOCAVA: Special votes under the Uniformed and Overseas Citizens Absentee Voting Act. FEDERAL PRECINCT: Votes from federal precincts, often representing overseas or military ballots. These rows do not represent actual counties and therefore lack valid county_fips codes.

> Since the rows with missing county_fips do not correspond to geographic counties, they were considered irrelevant for a county-level analysis. The rows were excluded from the dataset to maintain consistency and focus on valid county-level observations.


2. The dataset `Education.csv`



```{r}
data_2 <- read.csv("Education.csv")
# missing_summary <- colSums(is.na(data_2))
# print(missing_summary)

gg_miss_var(data_2) +
  labs(
    title = "Missing Values by Variable",
    subtitle = "Visualizing missing data in each column"
  )

gg_miss_case(data_2) +
  labs(
    title = "Missing Data Patterns Across Rows",
    subtitle = "Number of missing values per row"
  )
```




> The dataset was inspected for missing values using gg_miss_var and gg_miss_case visualizations. It was identified that the dataset contains no missing values in any of its columns.

> Since the dataset is complete, it requires no cleaning related to missing values and is ready for integration with other datasets or further analysis.


3. The dataset `Unemployment.csv`



```{r}
data_3 <- read.csv("Unemployment.csv")
# missing_summary <- colSums(is.na(data_3))
# print(missing_summary)

gg_miss_var(data_3) +
  labs(
    title = "Missing Values by Variable",
    subtitle = "Visualizing missing data in each column"
  )

gg_miss_case(data_3) +
  labs(
    title = "Missing Data Patterns Across Rows",
    subtitle = "Number of missing values per row"
  )
```




> The dataset was inspected for missing values using gg_miss_var and gg_miss_case visualizations. It was identified that the dataset contains no missing values in any of its columns.

> Since the dataset is complete, it requires no cleaning related to missing values and is ready for integration with other datasets or further analysis.


4. The datasets `estxxALL.csv`



```{r}
data_04 <- read.csv("est04ALL.csv")
data_08 <- read.csv("est08ALL.csv")
data_12 <- read.csv("est12ALL.csv")
data_16 <- read.csv("est16ALL.csv")
data_20 <- read.csv("est20ALL.csv")

# missing_summary <- colSums(is.na(data_04))
# print(missing_summary)

gg_miss_var(data_20) +
  labs(
    title = "Missing Values by Variable",
    subtitle = "Visualizing missing data in each column"
  )

gg_miss_case(data_20) +
  labs(
    title = "Missing Data Patterns Across Rows",
    subtitle = "Number of missing values per row"
  )
```




> The datasets were inspected for missing values using gg_miss_var and gg_miss_case visualizations. We found datasets contain no missing values in any of its columns.

> Since the datasets are complete, they require no cleaning related to missing values and are ready for integration with other datasets or further analysis.


